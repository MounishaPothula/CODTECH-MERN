(()=>{let e={id:null,url:null,startTime:null},t=[],o={},r=100,s={isActive:!1,isBreak:!1,timeLeft:0,totalSessions:0},i={notifications:{enabled:!0,productivityAlerts:!0,dailyReports:!0,soundEnabled:!0},timeManagement:{dailyLimit:120,workSessionDuration:25,breakDuration:5,longBreakDuration:15,sessionsBeforeLongBreak:4},categories:{productive:["github.com","stackoverflow.com","docs.google.com"],distracting:["facebook.com","instagram.com","twitter.com","youtube.com"],learning:[],work:[],custom:[]},focusMode:{enabled:!1,blockAllDistracting:!0,allowedSites:[],strictMode:!1},theme:{mode:"light"}};async function a(t){try{if(e.id&&await u(),!t.url||t.url.startsWith("chrome://")||t.url.includes(chrome.runtime.id))return;const o=n(t.url);if(!o)return;!function(e){switch(l(e)){case"productive":d(2);break;case"distracting":d(-2)}}(o),e={id:t.id,url:o,startTime:Date.now()},c(o).blocked&&chrome.tabs.update(t.id,{url:chrome.runtime.getURL("blocked.html")})}catch(e){console.error("Error in handleTabChange:",e)}}function c(e){const r=(new Date).getHours();let s="";try{if(t.includes(e))return s="This site has been manually blocked to help you stay productive.",{blocked:!0,reason:s};const a=o[e];if(a&&a.some((e=>{const[t,o]=e.split("-").map(Number);return r>=t&&r<o})))return s=`This site is scheduled to be blocked during this time period (${r}:00).`,{blocked:!0,reason:s};if(i.focusMode.enabled){if(i.focusMode.allowedSites.some((t=>e.includes(t.toLowerCase()))))return{blocked:!1};if(i.categories.distracting.some((t=>e.includes(t))))return s="This site is marked as distracting and is blocked during Focus Mode.",{blocked:!0,reason:s};if(i.focusMode.blockAllDistracting)return s="Focus Mode is active. Only allowed sites can be accessed.",{blocked:!0,reason:s}}return{blocked:!1}}catch(e){return console.error("Error in shouldBlockSite:",e),{blocked:!1}}}function n(e){try{return new URL(e).hostname}catch(t){return console.error("Invalid URL:",e),null}}function l(e){try{return i.categories.productive.some((t=>e.includes(t)))?"productive":i.categories.distracting.some((t=>e.includes(t)))?"distracting":i.categories.learning.some((t=>e.includes(t)))?"learning":i.categories.work.some((t=>e.includes(t)))?"work":"neutral"}catch(e){return console.error("Error in getSiteCategory:",e),"neutral"}}function d(e){r=Math.max(0,Math.min(100,r+e)),chrome.storage.local.set({productivityScore:r})}async function u(){if(!e.startTime||!e.url)return;const t=Date.now()-e.startTime,o=(new Date).toISOString().split("T")[0];chrome.storage.local.get(["timeTracking","categoryTracking"],(r=>{const s=r.timeTracking||{},i=r.categoryTracking||{};s[o]||(s[o]={},i[o]={productive:0,neutral:0,distracting:0}),s[o][e.url]||(s[o][e.url]=0),s[o][e.url]+=t;const a=l(e.url);i[o][a]||(i[o][a]=0),i[o][a]+=t,chrome.storage.local.set({timeTracking:s,categoryTracking:i})}))}function m(){const e=s.isBreak?s.totalSessions%i.timeManagement.sessionsBeforeLongBreak==0?i.timeManagement.longBreakDuration:i.timeManagement.breakDuration:i.timeManagement.workSessionDuration;s.timeLeft=60*e,s.isActive=!0,g()}function g(){if(!s.isActive)return;s.timeLeft>0?(s.timeLeft--,setTimeout(g,1e3)):(s.isBreak||s.totalSessions++,s.isBreak=!s.isBreak,i.notifications.enabled&&(chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:s.isBreak?"Take a Break!":"Back to Work!",message:s.isBreak?"Time for a refreshing break.":"Break is over. Time to focus!"}),i.notifications.soundEnabled&&new Audio(chrome.runtime.getURL("notification.mp3")).play()),m());const e=Math.floor(s.timeLeft/60),t=s.timeLeft%60;chrome.action.setBadgeText({text:`${e}:${t.toString().padStart(2,"0")}`})}function h(e){try{return e.startsWith("http://")||e.startsWith("https://")||(e="https://"+e),new URL(e).hostname.toLowerCase()}catch(t){return e.toLowerCase()}}chrome.runtime.onInstalled.addListener((()=>{chrome.storage.local.get(["blockedSites","siteSchedules","productivityScore","settings"],(e=>{try{t=e.blockedSites||[],o=e.siteSchedules||{},r=e.productivityScore||100,e.settings&&(i={...i,...e.settings,focusMode:{...i.focusMode,...e.settings.focusMode||{},allowedSites:e.settings.focusMode?.allowedSites||[]},categories:{...i.categories,...e.settings.categories||{}}}),chrome.storage.local.set({settings:i,blockedSites:t,siteSchedules:o,productivityScore:r})}catch(e){console.error("Error initializing settings:",e)}}))})),chrome.tabs.onActivated.addListener((async e=>{try{const t=await chrome.tabs.get(e.tabId);t.url&&a(t)}catch(e){console.error("Error handling tab activation:",e)}})),chrome.tabs.onUpdated.addListener(((e,t,o)=>{t.url&&a(o)})),chrome.runtime.onMessage.addListener(((e,t,o)=>{console.log("Received message:",e);try{if("checkIfBlocked"===e.action){const t=n(e.url);if(t){const e=c(t);o(e),e.blocked&&d(-5)}else o({blocked:!1})}else switch(e.action){case"updateFocusMode":i.focusMode={...i.focusMode,...e.focusMode},Array.isArray(i.focusMode.allowedSites)||(i.focusMode.allowedSites=[]),i.focusMode.allowedSites=i.focusMode.allowedSites.map((e=>h(e))),console.log("Updating focus mode settings:",i.focusMode),chrome.storage.local.set({settings:i},(()=>{chrome.runtime.lastError?(console.error("Error saving focus mode settings:",chrome.runtime.lastError),o({success:!1,error:chrome.runtime.lastError.message})):(i.focusMode.enabled&&chrome.tabs.query({},(e=>{e.forEach((e=>{e.url&&!e.url.startsWith("chrome://")&&chrome.tabs.reload(e.id)}))})),o({success:!0,settings:i}))}));break;case"addAllowedSite":const t=h(e.site);i.focusMode.allowedSites.includes(t)?o({success:!1,error:"Site already in allowed list"}):(i.focusMode.allowedSites.push(t),chrome.storage.local.set({settings:i},(()=>{chrome.runtime.lastError?o({success:!1,error:chrome.runtime.lastError.message}):(i.focusMode.enabled&&chrome.tabs.query({},(e=>{e.forEach((e=>{e.url&&!e.url.startsWith("chrome://")&&chrome.tabs.reload(e.id)}))})),o({success:!0,allowedSites:i.focusMode.allowedSites}))})));break;case"removeAllowedSite":const r=h(e.site);i.focusMode.allowedSites=i.focusMode.allowedSites.filter((e=>e!==r)),chrome.storage.local.set({settings:i},(()=>{chrome.runtime.lastError?o({success:!1,error:chrome.runtime.lastError.message}):(i.focusMode.enabled&&chrome.tabs.query({},(e=>{e.forEach((e=>{e.url&&!e.url.startsWith("chrome://")&&chrome.tabs.reload(e.id)}))})),o({success:!0,allowedSites:i.focusMode.allowedSites}))}));break;case"getAllowedSites":o({sites:i.focusMode.allowedSites});break;case"toggleFocusMode":i.focusMode.enabled=e.enabled,chrome.storage.local.set({settings:i},(()=>{chrome.tabs.query({},(e=>{e.forEach((e=>{e.url&&!e.url.startsWith("chrome://")&&chrome.tabs.reload(e.id)}))})),o({success:!0,enabled:i.focusMode.enabled})}));break;case"updateSettings":i={...i,...e.settings},chrome.storage.local.set({settings:i},(()=>{o({success:!0,settings:i})}));break;case"getSettings":o({settings:i});break;case"startPomodoro":s.isBreak=!1,s.totalSessions=0,m(),o({success:!0});break;case"stopPomodoro":s.isActive=!1,chrome.action.setBadgeText({text:""}),o({success:!0});break;case"getPomodoroState":o(s);break;default:o({error:"Unknown action"})}}catch(e){console.error("Error handling message:",e),o({error:e.message})}return!0})),chrome.alarms.create("dailyReset",{periodInMinutes:1440}),chrome.alarms.create("productivityReminder",{periodInMinutes:30}),chrome.alarms.create("saveData",{periodInMinutes:5}),chrome.alarms.onAlarm.addListener((e=>{switch(e.name){case"dailyReset":!async function(){const e=new Date;e.setDate(e.getDate()-1);const t=e.toISOString().split("T")[0];chrome.storage.local.get(["timeTracking","categoryTracking"],(e=>{if(e.timeTracking?.[t]){const o=e.timeTracking[t],r=e.categoryTracking[t],s=Object.values(o).reduce(((e,t)=>e+t),0),i=(r.productive/s*100).toFixed(1),a=(r.distracting/s*100).toFixed(1);chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Daily Productivity Report",message:`Yesterday's stats:\nTotal: ${Math.round(s/1e3/60)}min\nProductive: ${i}%\nDistracting: ${a}%`})}}))}();break;case"productivityReminder":chrome.storage.local.get(["settings","timeTracking"],(e=>{const t=e.settings||{};if(!t.notifications)return;const o=(new Date).toISOString().split("T")[0],r=e.timeTracking?.[o]||{};Object.values(r).reduce(((e,t)=>e+t),0)>60*t.dailyLimit*1e3&&chrome.notifications.create({type:"basic",iconUrl:"icons/icon128.png",title:"Daily Limit Reached",message:"You have reached your daily browsing limit. Time to take a break!"})}));break;case"saveData":u()}})),chrome.webNavigation.onHistoryStateUpdated.addListener((e=>{0===e.frameId&&chrome.tabs.get(e.tabId,(e=>{chrome.runtime.lastError||a(e)}))}))})();